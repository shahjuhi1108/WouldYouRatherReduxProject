{"version":3,"sources":["utils/_DATA.js","utils/api.js","actions/questions.js","actions/shared.js","actions/users.js","components/LoginPage.js","components/QuestionTile.js","components/Home.js","components/NewQuestion.js","components/LeaderTile.js","components/LeaderBoard.js","components/Nav.js","components/SelectedQuestion.js","components/Result.js","components/NotFoundPage.js","components/App.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","reducers/questions.js","middleware/logger.js","middleware/index.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_getUsers","Promise","res","rej","setTimeout","_getQuestions","_saveQuestion","question","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","concat","saveQuestionAnswer","info","qid","answer","_saveQuestionAnswer","handleAddQuestion","dispatch","getState","then","type","addQuestion","handleUpdateVote","updateVote","setAuthedUser","userId","handleInitialData","showLoading","all","receiveUsers","receiveQuestions","hideLoading","LoginPage","state","selectedUser","handleChange","event","target","value","setState","handleClick","preventDefault","props","this","classes","from","location","to","Container","maxWidth","Card","className","root","CardHeader","title","subheader","CardMedia","media","image","center","Select","onChange","formControl","map","user","MenuItem","key","Button","onClick","disabled","variant","color","fullWidth","Component","withStyles","margin","minWidth","padding","height","paddingTop","connect","Object","keys","QuestionTile","Grid","container","spacing","item","xs","Avatar","alt","src","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","style","textDecoration","TabPanel","index","role","hidden","aria-labelledby","Box","p","Home","newIndex","Paper","elevation","AppBar","position","Tabs","Tab","label","unanswered","answered","forEach","includes","push","sort","a","b","NewQuestion","toHome","Typography","CardContent","TextField","placeholder","textBox","gutterBottom","LeaderTile","length","created","LeaderBoard","sortedUserIds","styles","makeStyles","theme","display","small","width","exact","activeClassName","SelectedQuestion","chosenValue","redirect","question_id","RadioGroup","aria-label","FormControlLabel","control","Radio","button","match","params","paper","selectedPaper","backgroundColor","lighten","BorderLinearProgress","bar","borderRadius","LinearProgress","Result","selectedOption","one","two","total","align","toFixed","NotFoundPage","textAlign","React","App","loading","pathname","window","path","component","combineReducers","action","loadingBarReducer","logger","store","next","console","group","log","returnValue","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.547bac5a.chunk.js","sourcesContent":["let users = {\n  sarahedo: {\n    id: 'sarahedo',\n    name: 'Sarah Edo',\n    avatarURL: 'https://tylermcginnis.com/would-you-rather/sarah.jpg',\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n    },\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n  },\n  tylermcginnis: {\n    id: 'tylermcginnis',\n    name: 'Tyler McGinnis',\n    avatarURL: 'https://tylermcginnis.com/would-you-rather/tyler.jpg',\n    answers: {\n      \"vthrdm985a262al8qx3do\": 'optionOne',\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n    },\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n  },\n  johndoe: {\n    id: 'johndoe',\n    name: 'John Doe',\n    avatarURL: 'https://tylermcginnis.com/would-you-rather/dan.jpg',\n    answers: {\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\n    },\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n  }\n}\n\nlet questions = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: '8xf0y6ziyjabvozdd253nd',\n    author: 'sarahedo',\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: ['sarahedo'],\n      text: 'have horrible short term memory',\n    },\n    optionTwo: {\n      votes: [],\n      text: 'have horrible long term memory'\n    }\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: '6ni6ok3ym7mf1p33lnez',\n    author: 'johndoe',\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: 'become a superhero',\n    },\n    optionTwo: {\n      votes: ['johndoe', 'sarahedo'],\n      text: 'become a supervillain'\n    }\n  },\n  \"am8ehyc8byjqgar0jgpub9\": {\n    id: 'am8ehyc8byjqgar0jgpub9',\n    author: 'sarahedo',\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: 'be telekinetic',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be telepathic'\n    }\n  },\n  \"loxhs1bqm25b708cmbf3g\": {\n    id: 'loxhs1bqm25b708cmbf3g',\n    author: 'tylermcginnis',\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: 'be a front-end developer',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be a back-end developer'\n    }\n  },\n  \"vthrdm985a262al8qx3do\": {\n    id: 'vthrdm985a262al8qx3do',\n    author: 'tylermcginnis',\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: ['tylermcginnis'],\n      text: 'find $50 yourself',\n    },\n    optionTwo: {\n      votes: ['johndoe'],\n      text: 'have your best friend find $500'\n    }\n  },\n  \"xj352vofupe1dqz9emx13r\": {\n    id: 'xj352vofupe1dqz9emx13r',\n    author: 'johndoe',\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: ['johndoe'],\n      text: 'write JavaScript',\n    },\n    optionTwo: {\n      votes: ['tylermcginnis'],\n      text: 'write Swift'\n    }\n  },\n}\n\nfunction generateUID () {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nexport function _getUsers () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...users}), 1000)\n  })\n}\n\nexport function _getQuestions () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...questions}), 1000)\n  })\n}\n\nfunction formatQuestion ({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    }\n  }\n}\n\nexport function _saveQuestion (question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion\n      }\n\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\n        }\n      }\n\n      res(formattedQuestion)\n    }, 1000)\n  })\n}\n\nexport function _saveQuestionAnswer ({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer\n          }\n        }\n      }\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser])\n          }\n        }\n      }\n\n      res()\n    }, 500)\n  })\n}\n","import {\n  _getUsers,\n  _getQuestions,\n  _saveQuestion,\n  _saveQuestionAnswer\n} from './_DATA.js'\n\nexport function getInitialData () {\n  return Promise.all([\n    _getUsers(),\n    _getQuestions(),\n  ]).then(([users, questions]) => ({\n    users,\n    questions,\n  }))\n}\n\n\nexport function getUsers() {\n  return _getUsers()\n}\n\nexport function getQuestions() {\n  return _getQuestions()\n}\n\nexport function saveQuestionAnswer (info) {\n  return _saveQuestionAnswer(info)\n}\n\nexport function saveQuestion (info) {\n  return _saveQuestion(info)\n}\n","import { saveQuestion, saveQuestionAnswer } from '../utils/api'\n\nexport const ADD_QUESTION = 'ADD_QUESTION'\nexport const UPDATE_VOTE = 'UPDATE_VOTE'\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\n\nexport function receiveQuestions (questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions,\n  }\n}\n\nexport function addQuestion (question) {\n  return {\n    type: ADD_QUESTION,\n    question\n  }\n}\n\nexport function handleAddQuestion (optionOne, optionTwo) {\n    return (dispatch, getState) => {\n\n        const { authedUser } = getState()\n\n        return saveQuestion({\n            optionOneText: optionOne,\n            optionTwoText: optionTwo,\n            author: authedUser,\n        })\n            .then((question) => dispatch(addQuestion(question)))\n    }\n}\n\nexport function updateVote (authedUser, qid, answer) {\n  return {\n    type: UPDATE_VOTE,\n    authedUser,\n    qid, \n    answer\n  }\n}\n\nexport function handleUpdateVote (qid, answer) {\n  return (dispatch, getState) => {\n    const { authedUser } = getState()\n\n    return saveQuestionAnswer({\n      authedUser: authedUser,\n      qid: qid,\n      answer: answer\n    })\n      .then(() => dispatch(updateVote(authedUser, qid, answer)))\n  }\n}","import { receiveUsers } from '../actions/users'\nimport { receiveQuestions } from '../actions/questions'\nimport { getInitialData } from '../utils/api'\nimport { showLoading, hideLoading } from 'react-redux-loading'\n\nexport const SET_AUTHED_USER = 'SET_AUTHED_USER'\nexport const REMOVE_AUTHED_USER = 'REMOVE_AUTHED_USER'\n\nexport function setAuthedUser (userId) {\n  return {\n    type: SET_AUTHED_USER,\n    id: userId,\n  }\n}\n\nexport function handleInitialData () {\n    return (dispatch) => {\n      dispatch(showLoading())\n      return getInitialData()\n        .then(({ users, questions }) => {\n          dispatch(receiveUsers(users))\n          dispatch(receiveQuestions(questions))\n          dispatch(hideLoading())\n        })\n    }\n}\n  \nexport function removeAuthedUser () {\n  return {\n    type: REMOVE_AUTHED_USER,\n  }\n}","export const RECEIVE_USERS = 'RECEIVE_USERS'\n\nexport function receiveUsers (users) {\n  return {\n    type: RECEIVE_USERS,\n    users,\n  }\n}","import React, { Component } from 'react'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { connect } from 'react-redux'\nimport { setAuthedUser } from '../actions/shared'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Container from '@material-ui/core/Container'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport { Redirect } from 'react-router-dom'\n\n\n\nconst styles = {\n    root: {\n        maxWidth: 450,\n        margin: 5\n    },\n    formControl: {\n        minWidth: 400,\n        padding: 10,\n        margin: 5\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    center: {\n        margin: 5,\n        padding: 10\n    }\n}\n\n\nclass LoginPage extends Component {\n\n    state = {\n        selectedUser: ''\n    }\n\n    handleChange = (event) => {\n        const selectedUser = event.target.value\n\n        this.setState(() => ({\n            selectedUser\n        }))\n    }\n\n    handleClick = (event) => {\n        event.preventDefault()\n\n        const { selectedUser } = this.state\n\n        const { dispatch } = this.props\n\n        dispatch(setAuthedUser(selectedUser))\n\n        this.setState(() => ({\n            selectedUser: ''\n        }))\n\n    }\n\n    render() {\n\n        const { users, classes, authedUser } = this.props\n\n        const from = this.props.location.state.from\n\n        if (authedUser !== '') {\n            return <Redirect to={ from === '/login' ? '/' : from} />\n        }\n\n        return (\n            <Container maxWidth=\"sm\">\n                <Card className={classes.root}>\n                    <CardHeader\n                        title=\"Welcome to the Would You Rather App\"\n                        subheader=\"Please sign in to continue\"\n                    />\n                    <CardMedia className={classes.media} image=\"https://cdn.auth0.com/blog/react-redux/logo.png\" title=\"React-Redux-Logo\" />\n                    <Container className={classes.center}>\n                        <Select\n                            value={this.state.selectedUser}\n                            onChange={this.handleChange}\n                            className={classes.formControl}\n                        >\n                            {users.map((user) => (\n                                <MenuItem key={user.id} value={user.id}> {user.name} </MenuItem>\n                            ))}\n                        </Select>\n                        <Button\n                            onClick={this.handleClick}\n                            type='submit'\n                            disabled={this.state.selectedUser === ''}\n                            variant=\"outlined\" color=\"primary\"\n                            fullWidth\n                        >\n                            Sign in\n                        </Button>\n                    </Container>\n                </Card>\n            </Container>\n\n        )\n    }\n}\n\nfunction mapStateToProps({ authedUser, users }, props) {\n\n    return {\n        authedUser: authedUser,\n        users: Object.keys(users).map((id) => { return { \"id\": id, \"name\": users[id].name } })\n    }\n}\n\nexport default withStyles(styles)(connect(mapStateToProps)(LoginPage))","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Card, Grid, TableCell, TableBody, Container } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\n\n\nconst styles = {\n    root: {\n        maxWidth: 450,\n        margin: 8\n    },\n}\n\n\n\nclass QuestionTile extends Component {\n\n    render() {\n\n        const { question, classes, users } = this.props\n        const user = users[question.author]\n\n        return (\n\n\n            <Card className={classes.root}>\n                <CardHeader\n                    title={user.name + \" asks:\"}\n                >\n                </CardHeader>\n                <Grid container spacing={2}>\n                    <Grid item xs={4}>\n                        <Container>\n                            <Avatar alt={user.name} src={user.avatarURL} />\n                        </Container>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <TableContainer>\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>\n                                            Would You Rather\n                                        </TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>\n                                            ...{question.optionOne.text}...\n                                        </TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell>\n                                            <Link style={{ textDecoration: 'none' }} to={`/questions/${question.id}`}>\n                                                <Button type=\"submit\" variant=\"outlined\" color=\"primary\" fullWidth >\n                                                    View Poll\n                                                </Button>\n                                            </Link>\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Grid>\n                </Grid>\n            </Card>\n        )\n    }\n\n}\n\nQuestionTile.propTypes = {\n    question: PropTypes.object.isRequired\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        users: state.users\n    }\n}\n\nexport default withStyles(styles)(connect(mapStateToProps)(QuestionTile))","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Paper from '@material-ui/core/Paper'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport QuestionTile from './QuestionTile'\nimport Box from '@material-ui/core/Box'\nimport PropTypes from 'prop-types'\nimport { Container } from '@material-ui/core'\n\n\nfunction TabPanel(props) {\n    const { value, index, questions } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n        >\n            {value === index && (\n                <Box p={2}>\n                    {questions.map((question) => <QuestionTile key={question.id} question={question} />)}\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n    questions: PropTypes.array.isRequired\n};\n\n\nconst styles = {\n    root: {\n        maxWidth: 450,\n        padding: 5\n    },\n}\n\nclass Home extends Component {\n\n    state = {\n        index: 0\n    }\n\n    handleChange = (event, newIndex) => {\n        event.preventDefault()\n\n        this.setState(() => ({\n            index: newIndex\n        }))\n\n    }\n\n\n    render() {\n\n        const { classes } = this.props\n\n        return (\n            <Container>\n                <div>\n                    <Paper className={classes.root} elevation={1} variant=\"outlined\">\n                        <AppBar position=\"static\">\n                            <Tabs value={this.state.index} onChange={this.handleChange}>\n                                <Tab label=\"Unanswered Questions\" />\n                                <Tab label=\"Answered Questions\" />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.index} index={0} questions={this.props.unanswered} />\n                        <TabPanel value={this.state.index} index={1} questions={this.props.answered} />\n                    </Paper>\n                </div>\n            </Container>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n\n    const answered = []\n    const unanswered = []\n\n    const questions = state.questions\n    const authedUser = state.authedUser\n\n    Object.keys(questions).forEach((id) => {\n        questions[id].optionOne.votes.includes(authedUser) || questions[id].optionTwo.votes.includes(authedUser)\n            ? answered.push(questions[id])\n            : unanswered.push(questions[id])\n    })\n\n    return {\n        answered : answered.sort((a,b) => b.timestamp - a.timestamp),\n        unanswered : unanswered.sort((a,b) => b.timestamp - a.timestamp)\n    }\n}\n\nexport default withStyles(styles)(connect(mapStateToProps)(Home))","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport { TextField, Typography } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport { handleAddQuestion } from '../actions/questions'\nimport { Redirect } from 'react-router-dom'\nimport Container from '@material-ui/core/Container'\nimport Button from '@material-ui/core/Button'\n\n\n\n\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n    root: {\n        maxWidth: 450,\n        minWidth: 300\n    },\n    media: {\n        height: 140,\n    },\n    center: {\n        margin: 5,\n        padding: 10\n    },\n    textBox: {\n        maxWidth: 400,\n        minWidth: 250\n    }\n}\n\nclass NewQuestion extends Component {\n\n    state = {\n        optionOneText: '',\n        optionTwoText: '',\n        toHome: false\n    }\n\n    handleChange = (event) => {\n\n        const text = event.target.value\n\n        if (event.target.id === \"first-option\") {\n            this.setState(() => ({\n                optionOneText: text\n            }))\n        }\n\n        else if (event.target.id === \"second-option\") {\n            this.setState(() => ({\n                optionTwoText: text\n            }))\n        }\n    }\n\n    handleClick = (event) => {\n        event.preventDefault()\n\n        const { dispatch } = this.props\n\n        dispatch(handleAddQuestion(this.state.optionOneText, this.state.optionTwoText))\n\n        this.setState(() => ({\n            optionOneText: '',\n            optionTwoText: '',\n            toHome: true\n        }))\n\n    }\n\n\n    render() {\n        const { classes } = this.props\n\n        if (this.state.toHome) {\n            return < Redirect to='/' />\n        }\n\n        return (\n            <Container>\n                <div className={classes.root}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={4}>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Card className={classes.root}>\n                                <CardHeader\n                                    title=\"Create New Question\"\n                                >\n                                </CardHeader>\n                                <Container className={classes.center}>\n                                    <Typography>\n                                        Would You Rather...\n                                    </Typography>\n                                    <CardContent>\n                                        <TextField\n                                            id=\"first-option\"\n                                            label=\"Option One\" variant=\"filled\"\n                                            placeholder=\"Option One\"\n                                            value={this.state.optionOneText}\n                                            onChange={this.handleChange}\n                                            className={classes.textBox}\n                                        />\n                                        <Typography gutterBottom >\n                                            OR\n                                        </Typography>\n                                        <TextField\n                                            id=\"second-option\"\n                                            label=\"Option Two\" variant=\"filled\"\n                                            placeholder=\"Option Two\"\n                                            value={this.state.optionTwoText}\n                                            onChange={this.handleChange}\n                                            className={classes.textBox}\n                                        />\n                                    </CardContent>\n\n                                    <Button\n                                        onClick={this.handleClick}\n                                        type='submit'\n                                        disabled={this.state.optionOneText === '' || this.state.optionTwoText === ''}\n                                        variant=\"outlined\" color=\"primary\"\n                                        fullWidth\n                                    >\n                                        Submit\n                                </Button>\n                                </Container>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={4}>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Container>\n\n        )\n    }\n}\n\nexport default connect()(withStyles(styles)(NewQuestion))","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Grid, TableCell, TableBody } from '@material-ui/core'\nimport Avatar from '@material-ui/core/Avatar'\nimport { withStyles } from '@material-ui/core/styles'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table';\n\n\nconst styles = {\n    root: {\n        maxWidth: 500,\n        margin: 8\n    },\n    media: {\n        height: 140,\n    },\n}\n\nclass LeaderTile extends Component {\n    render() {\n\n        const { user, classes } = this.props\n        const answered = Object.keys(user.answers).length\n        const created = user.questions.length\n\n        return (\n            <Card className={classes.root}>\n                <Grid container spacing={3}>\n                    <Grid item xs={3}><Avatar alt={user.name} src={user.avatarURL} /> </Grid>\n                    <Grid item xs={6}>\n                        <TableContainer>\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>\n                                            {user.name}\n                                        </TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell>Answered Questions</TableCell>\n                                        <TableCell>{answered}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Created Questions</TableCell>\n                                        <TableCell>{created}</TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <TableContainer>\n                            <Table>\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell>\n                                            Score\n                                        </TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>\n                                            {answered + created}\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Grid>\n                </Grid>\n            </Card>\n        )\n    }\n}\n\nLeaderTile.propTypes = {\n    user: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(LeaderTile)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport LeaderTile from './LeaderTile'\nimport { Container } from '@material-ui/core'\n\nclass LeaderBoard extends Component {\n    render() {\n\n        const { users } = this.props\n\n        const sortedUserIds = Object.keys(users)\n            .sort((a, b) =>\n                (Object.keys(users[b].answers).length + users[b].questions.length)\n                - (Object.keys(users[a].answers).length + users[a].questions.length))\n\n        return (\n            <Container>\n                <div>\n                    <h3>LeaderBoard</h3>\n                    {sortedUserIds.map((id) => <LeaderTile key={id} user={users[id]} />)}\n                </div>\n            </Container>\n        )\n    }\n}\n\nfunction mapStateToProps({ users }) {\n    return {\n        users\n    }\n}\n\nexport default connect(mapStateToProps)(LeaderBoard)","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid'\nimport { connect } from 'react-redux'\nimport Avatar from '@material-ui/core/Avatar'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { removeAuthedUser } from '../actions/shared'\n\n\nconst styles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    small: {\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n    }\n}));\n\n\nfunction Nav(props) {\n\n    const user = props.authedUser\n    const classes = styles();\n\n    const handleClick = (event) => {\n        event.preventDefault()\n    \n        props.dispatch(removeAuthedUser())\n    \n    }\n\n    return (\n\n        <Grid container spacing={3}>\n            <Grid item>\n                <NavLink to='/' exact activeClassName='active'>\n                    Home\n                </NavLink>\n            </Grid>\n\n            <Grid item>\n                <NavLink to='/add' exact activeClassName='active'>\n                    New Question\n                </NavLink>\n            </Grid>\n\n            <Grid item>\n                <NavLink to='/leaderboard' exact activeClassName='active'>\n                    Leader Board\n                </NavLink>\n            </Grid>\n\n            <Grid item>\n                Hello, {props.users[user].name}\n            </Grid>\n\n            <Grid item >\n                <Avatar alt={props.users[user].name} src={props.users[user].avatarURL} className={classes.small}></Avatar>\n            </Grid>\n\n            <Grid item>\n                <NavLink to='/login' onClick={handleClick} activeClassName='active'>\n                    Logout\n                </NavLink>\n            </Grid>\n\n        </Grid>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        authedUser: state.authedUser,\n        users: state.users\n    }\n}\n\nexport default connect(mapStateToProps)(Nav)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Card, Grid, TableCell, TableBody, Container } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Radio from '@material-ui/core/Radio'\nimport Button from '@material-ui/core/Button'\nimport { handleUpdateVote } from '../actions/questions'\nimport { Redirect } from 'react-router-dom'\n\n\nconst styles = {\n    root: {\n        maxWidth: 500,\n        margin: 8\n    },\n}\n\nclass SelectedQuestion extends Component {\n\n    state = {\n        chosenValue: '',\n        redirect: false\n    }\n\n    handleChange = (event) => {\n\n        const value = event.target.value\n\n        this.setState(() => ({\n            chosenValue: value\n        }))\n    }\n\n    handleClick = (event) => {\n        event.preventDefault()\n\n        const { chosenValue } = this.state\n\n        const { dispatch, question_id } = this.props\n\n        dispatch(handleUpdateVote(question_id, chosenValue))\n\n        this.setState(() => ({\n            redirect: true,\n        }))\n\n    }\n\n\n    render() {\n\n        const { question_id, users, questions, classes } = this.props\n\n        if(!questions[question_id]) {\n            return <Redirect to='/404' />\n        }\n\n        if(this.state.redirect) {\n            return <Redirect to={`/questions/${question_id}/${this.state.chosenValue}`} />\n        }\n\n\n        return (\n\n            <Card className={classes.root}>\n                <CardHeader\n                    title={users[questions[question_id].author].name + \" asks:\"}\n                >\n                </CardHeader>\n                <Grid container spacing={2}>\n                    <Grid item xs={4}>\n                        <Container>\n                            <Avatar alt={users[questions[question_id].author].name} src={users[questions[question_id].author].avatarURL} />\n                        </Container>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <TableContainer>\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>\n                                            Would You Rather...\n                                        </TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell>\n                                            <RadioGroup aria-label=\"quiz\" name=\"quiz\" onChange={this.handleChange}>\n                                                <FormControlLabel value=\"optionOne\" control={<Radio />} label={questions[question_id].optionOne.text} />\n                                                <FormControlLabel value=\"optionTwo\" control={<Radio />} label={questions[question_id].optionTwo.text} />\n                                            </RadioGroup>\n                                                <Button onClick={this.handleClick} type=\"submit\" disabled={this.state.chosenValue === ''}\n                                                    variant=\"outlined\" color=\"primary\" className={classes.button} fullWidth>\n                                                    Submit\n                                                </Button>\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Grid>\n                </Grid>\n            </Card>\n        )\n    }\n}\n\nfunction mapStateToProps({ users, questions }, props) {\n\n    const { question_id } = props.match.params\n\n    return {\n        question_id,\n        users: users,\n        questions: questions\n    }\n}\n\n\nexport default withStyles(styles)(connect(mapStateToProps)(SelectedQuestion))","import React, { Component } from 'react'\nimport { lighten, withStyles } from '@material-ui/core/styles'\nimport { connect } from 'react-redux'\nimport Avatar from '@material-ui/core/Avatar'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Paper from '@material-ui/core/Paper'\nimport { Card, Grid, TableCell, TableBody, Container, Typography } from '@material-ui/core'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\n\nconst styles = {\n    root: {\n        maxWidth: 450,\n        margin: 8,\n    },\n\n    paper: {\n        maxWidth: 400,\n        minWidth: 200,\n        margin: 8,\n        padding: 10\n    },\n\n    selectedPaper: {\n        maxWidth: 400,\n        minWidth: 200,\n        margin: 8,\n        padding: 10,\n        backgroundColor: lighten('#b2dfdb', 0.7),\n    }\n\n}\n\nconst BorderLinearProgress = withStyles({\n    root: {\n        height: 25,\n        backgroundColor: lighten('#b2dfdb', 0.3),\n        margin: 5\n    },\n    bar: {\n        borderRadius: 0,\n        backgroundColor: '#00695c',\n    },\n})(LinearProgress);\n\n\n\nclass Result extends Component {\n    render() {\n\n        const { question_id, users, questions, classes, selectedOption } = this.props\n\n\n        const one = questions[question_id].optionOne.votes.length\n        const two = questions[question_id].optionTwo.votes.length\n\n        const total = one + two\n\n        return (\n\n            <Card className={classes.root}>\n                <Container>\n                    <CardHeader\n                        title={\"Asked by : \" + users[questions[question_id].author].name}\n                    >\n                    </CardHeader>\n                    <Grid container spacing={2}>\n                        <Grid item xs={2}>\n                            <Container>\n                                <Avatar alt={users[questions[question_id].author].name} src={users[questions[question_id].author].avatarURL} />\n                            </Container>\n                        </Grid>\n                        <Grid item xs={10}>\n                            <TableContainer>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>\n                                                Results:\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell>\n                                                <Container>\n                                                    <Paper variant=\"outlined\" className={selectedOption === 'optionOne'\n                                                        ? classes.selectedPaper\n                                                        : classes.paper} >\n                                                        <Typography variant=\"caption\"  >\n                                                            Would You Rather {questions[question_id].optionOne.text}\n                                                        </Typography>\n\n                                                        <BorderLinearProgress\n                                                            className={classes.margin}\n                                                            variant=\"determinate\"\n                                                            color=\"secondary\"\n                                                            value={(one / total) * 100}\n                                                        />\n\n                                                        <Typography align='center' variant=\"caption\" display=\"block\">\n                                                            {one} out of {total} votes\n                                                        </Typography>\n\n                                                        <Typography align='center' variant=\"caption\" display=\"block\">\n                                                            {`${((one / total) * 100).toFixed(1)}%`}\n                                                        </Typography>\n\n                                                    </Paper>\n                                                </Container>\n                                                <Container>\n                                                    <Paper variant=\"outlined\" className={selectedOption === 'optionTwo'\n                                                        ? classes.selectedPaper\n                                                        : classes.paper}>\n                                                        <Typography variant=\"caption\" >\n                                                            Would You Rather {questions[question_id].optionTwo.text}\n                                                        </Typography>\n\n                                                        <BorderLinearProgress\n                                                            className={classes.margin}\n                                                            variant=\"determinate\"\n                                                            color=\"secondary\"\n                                                            value={(two / total) * 100}\n                                                        />\n\n                                                        <Typography align=\"center\" variant=\"caption\" display=\"block\">\n                                                            {two} out of {total} votes\n                                                        </Typography>\n\n                                                        <Typography align='center' variant=\"caption\" display=\"block\">\n                                                            {`${((two / total) * 100).toFixed(1)}%`}\n                                                        </Typography>\n\n                                                    </Paper>\n                                                </Container>\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Card>\n        )\n    }\n}\n\nfunction mapStateToProps({ users, questions }, props) {\n\n    const { question_id, selectedOption } = props.match.params\n\n    return {\n        question_id,\n        selectedOption,\n        users: users,\n        questions: questions\n    }\n}\n\nexport default withStyles(styles)(connect(mapStateToProps)(Result))","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Typography } from '@material-ui/core';\n\nclass NotFoundPage extends React.Component {\n  render() {\n    return <div>\n      <p style={{ textAlign: \"center\" }}>\n        <Typography>\n          This page doesn't exist.\n          <br/>\n                <Link to=\"/\">Go to Home </Link>\n        </Typography>\n\n      </p>\n    </div>;\n  }\n}\n\nexport default NotFoundPage","import React, { Component, Fragment } from 'react'\nimport { handleInitialData } from '../actions/shared'\nimport LoginPage from './LoginPage'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Home from './Home'\nimport NewQuestion from './NewQuestion'\nimport LeaderBoard from './LeaderBoard'\nimport Nav from './Nav'\nimport SelectedQuestion from './SelectedQuestion'\nimport Result from './Result'\nimport { LoadingBar } from 'react-redux-loading'\nimport { Container } from '@material-ui/core'\nimport { Redirect } from 'react-router-dom'\nimport NotFoundPage from './NotFoundPage'\n\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch(handleInitialData())\n  }\n\n  render() {\n    return (\n      <Router>\n        <Fragment>\n          <LoadingBar />\n          <Container className='container'>\n            <div>\n              {this.props.loading\n                ? null\n                :\n                <div>\n                  {this.props.authedUser === ''\n                  ? <Redirect to={{\n                    pathname: '/login',\n                    state: { from: window.location.pathname }\n                  }} />\n                  : \n                  <div>\n                  <Nav />\n                  <Route path='/' exact component={Home} />\n                  <Route path='/add' exact component={NewQuestion} />\n                  <Route path='/leaderboard' exact component={LeaderBoard} />\n                  <Route path='/questions/:question_id' exact component={SelectedQuestion} />\n                  <Route path='/questions/:question_id/:selectedOption' exact component={Result} />\n                  <Route path=\"/404\" component={NotFoundPage} />\n                  </div>\n                  }\n\n                  <Route path='/login' component={LoginPage} />\n                </div>\n              }\n            </div>\n          </Container>\n        </Fragment>\n      </Router>\n\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    loading: (Object.keys(state.users).length === 0 || Object.keys(state.questions).length === 0),\n    authedUser: state.authedUser,\n    users: state.users\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n\n\n","import { combineReducers } from 'redux'\nimport authedUser from './authedUser'\nimport users from './users'\nimport questions from './questions'\nimport { loadingBarReducer } from 'react-redux-loading'\n\n\nexport default combineReducers({\n    authedUser,\n    users,\n    questions,\n    loading: loadingBarReducer\n})","import { SET_AUTHED_USER, REMOVE_AUTHED_USER } from '../actions/shared'\n\nexport default function authedUser (state = '', action) {\n  switch(action.type) {\n    case SET_AUTHED_USER :\n      return action.id\n\n    case REMOVE_AUTHED_USER :\n      return ''\n\n    default :\n      return state\n  }\n}\n","import { RECEIVE_USERS } from '../actions/users'\nimport { ADD_QUESTION, UPDATE_VOTE } from '../actions/questions'\n\nexport default function users (state = {}, action) {\n  switch(action.type) {\n    case RECEIVE_USERS :\n      return {\n        ...state,\n        ...action.users\n      }\n\n    case ADD_QUESTION :\n      return {\n        ...state,\n        [action.question.author]: {\n          ...state[action.question.author],\n          questions: state[action.question.author].questions.concat([action.question.id])\n        }\n      }\n\n    case UPDATE_VOTE :\n      return {\n        ...state,\n        [action.authedUser]: {\n          ...state[action.authedUser],\n          answers: {\n            ...state[action.authedUser].answers,\n            [action.qid]: action.answer\n          }\n        }\n      }\n\n    default :\n      return state\n  }\n}","import { RECEIVE_QUESTIONS, ADD_QUESTION, UPDATE_VOTE } from '../actions/questions'\n\nexport default function questions(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_QUESTIONS:\n      return {\n        ...state,\n        ...action.questions\n      }\n\n    case ADD_QUESTION:\n      return {\n        ...state,\n        [action.question.id]: action.question\n      }\n\n\n\n    case UPDATE_VOTE:\n      return {\n        ...state,\n        [action.qid]: {\n          ...state[action.qid],\n          [action.answer]: {\n            ...state[action.qid][action.answer],\n            votes: state[action.qid][action.answer].votes.concat([action.authedUser])\n          }\n        }\n      }\n\n    default:\n      return state\n  }\n}","const logger = (store) => (next) => (action) => {\n\n  console.group(action.type)\n    console.log('The action: ' , action)\n    const returnValue = next(action)\n    console.log('The new state: ' , store.getState())\n  console.groupEnd()\n  return returnValue\n}\n\nexport default logger\n","import thunk from 'redux-thunk'\nimport logger from './logger'\nimport { applyMiddleware } from 'redux'\n\nexport default applyMiddleware (\n  thunk,\n  logger,\n)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducers'\nimport middleware from './middleware'\n\nconst store = createStore(reducer, middleware)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}